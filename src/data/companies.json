[
  {
    "blogs": [],
    "content": {
      "achievements": [
        {
          "description": [
            "Reduced software crawler failure rate from over 50% to under 5% by implementing robust error handling and automated retry mechanisms.",
            "Decreased crawler runtime from 3 hours to under 30 minutes by optimizing data collection schedules based on site maintenance times and transitioning from Selenium to Scrapy for minimal UI interaction.",
            "Automated failure reporting by sending email notifications with lists of failed software collections after three unsuccessful attempts, eliminating manual tracking."
          ],
          "title": "Software Crawler Optimization"
        },
        {
          "description": [
            "Developed a script to automate version collection of over 100 software programs installed on Windows, generating CSV reports for streamlined verification.",
            "Reduced version validation time by 83%, from 1 hour to under 10 minutes, by eliminating manual data entry and minimizing errors previously caused by manual Excel updates."
          ],
          "title": "Software Version Validation Automation"
        },
        {
          "description": [
            "Automated news scraping and report generation by identifying high-frequency keywords from three years of reports, enabling targeted collection of relevant news.",
            "Reduced report creation time by 91%, from over 1 hour to under 5 minutes, by automating the entire process except final sharing, using keyword-based filtering to produce formatted reports."
          ],
          "title": "News Scraper Report Automation"
        }
      ],
      "summary": "As an intern, I managed software collection and manual error handling, identifying inefficiencies and automating processes to cut crawler failure rates from 50% to under 5% and reduce report generation time by over 90%."
    },
    "duration": "8m",
    "href": "estsecurity",
    "id": 0,
    "label": "EstSecurity",
    "period": "July 2020-February 2021",
    "team": "full-time internship",
    "title": "Devops Engineer"
  },
  {
    "blogs": [],
    "content": {
      "achievements": [
        {
          "description": [
            "Developed web-based asset deployment control platform to prevent unauthorized release of unrevealed content (spoilers) and missing critical resources that cause game crashes",
            "Built hash-based file change detection and approval workflow system, achieving zero incidents of resource leakage and deployment failures",
            "Implemented role-based approval process with web GUI for game packaging teams, protecting marketing strategies while ensuring game stability through comprehensive asset validation"
          ],
          "title": "Game Asset Release Risk Management System"
        },
        {
          "description": [
            "Consolidated fragmented CI/CD scripts scattered across multiple SCM systems (Visual SVN, Perforce servers) into centralized GitLab repository, eliminating duplicate maintenance and preventing recurring bugs from inconsistent update",
            "Standardized heterogeneous build systems across multiple projects from mixed Python/Shell/Groovy scripts and custom tools to unified Jenkins+Groovy pipeline, reducing operational complexity and enabling team-wide maintainability"
          ],
          "title": "CI/CD Infrastructure Consolidation"
        },
        {
          "description": [
            "Automated manual build processes using Jenkins and Perforce triggers, reducing build deployment time from hours to minutes and eliminating manual intervention requirements",
            "Developed Slack integration system for real-time build status notifications and detailed error reporting, enabling immediate team response to build failures",
            "Implemented automated monitoring system for build performance metrics (memory usage, execution time) with threshold-based alerting, proactively identifying performance degradation and system issues"
          ],
          "title": "Build Process Automation and Monitoring"
        }
      ],
      "summary": "I led the development of systems to prevent unauthorized content releases and system failures, unified CI/CD pipelines for consistent and efficient builds, and automated processes to reduce manual work and enhance team productivity."
    },
    "duration": "1y6m",
    "href": "pearlabyss",
    "id": 1,
    "label": "PearlAbyss",
    "period": "July 2021-December 2022",
    "team": "Platform Programming Team",
    "title": "Software Engineer"
  },
  {
    "blogs": [
      {
        "description": "Transforming stressful manual operations into automated workflows that the whole team could rely on.",
        "id": 0,
        "tags": ["Slack Bot", "Automation", "CI/CD"],
        "title": "Building an Automation Slack Bot to Streamline Operations",
        "url": "https://tech-kakaopay-com.translate.goog/post/slack-bot-improving-operational-efficiency/?_x_tr_sl=ko&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp"
      },
      {
        "description": "How we reduced testing complexity and wait times by implementing a common mock server infrastructure.",
        "id": 1,
        "tags": ["Test", "Automation", "Mocking"],
        "title": "Lowering KakaoPay's Testing Barriers with a Shared Mock Server",
        "url": "https://tech-kakaopay-com.translate.goog/post/how-to-simplify-kakaopay-testing-using-a-common-mock-server/?_x_tr_sl=ko&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp"
      },
      {
        "description": "A retrospective on the unexpected challenges that came with automation and how we solved them.",
        "id": 2,
        "tags": ["Lessons learned", "CI/CD", "Automation"],
        "title": "One Year of KakaoPay Deployment Automation: Lessons Learned",
        "url": "https://tech-kakaopay-com.translate.goog/post/slack-bot-improving-operational-efficiency-2/?_x_tr_sl=ko&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp"
      }
    ],
    "content": {
      "achievements": [
        {
          "description": [
            "Resulted in a significant reduction of the deployment operations team from 10 full-time members to 1 full-time and 2 part-time members"
          ],
          "title": "Automate software deployment and communication processes to enhance productivity and reduce manual effort"
        },
        {
          "description": [
            "Built UI and API servers utilizing an existing open-source mock server",
            "Created an environment that allows easy company-wide setup and utilization of mock servers",
            "Achieved a processing performance of over 1 million transactions per day"
          ],
          "title": "Developed a platform for performance testing and mock API testing"
        },
        {
          "description": [],
          "title": "Collaborated with the audit team to ensure compliance with strict security and privacy regulations while finding optimal solutions for development"
        }
      ],
      "summary": "I worked on automating deployment and communication processes, which helped my team work more efficiently and reduced our workload. I also developed a platform for performance and mock API testing, and collaborated with audit teams to ensure we met security and privacy standards."
    },
    "duration": "1y10m",
    "href": "kakaopay",
    "id": 2,
    "label": "KakaoPay",
    "period": "December 2022-September 2024",
    "team": "SRE Team, Release Engineering Part",
    "title": "Release Engineer"
  }
]
